// Generated by view binder compiler. Do not edit!
package com.example.myapplication1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import com.example.myapplication1.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBmiBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final AppBarLayout appbarBmi;

  @NonNull
  public final Button calculatebmi;

  @NonNull
  public final RelativeLayout centerhorizontalline;

  @NonNull
  public final RelativeLayout centerverticalline;

  @NonNull
  public final TextView currentheight;

  @NonNull
  public final TextView currentweight;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final RelativeLayout heightlayout;

  @NonNull
  public final SeekBar heightseekbar;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final Toolbar tbBmi;

  @NonNull
  public final RelativeLayout weightlayout;

  @NonNull
  public final SeekBar weightseekbar;

  private ActivityBmiBinding(@NonNull DrawerLayout rootView, @NonNull AppBarLayout appbarBmi,
      @NonNull Button calculatebmi, @NonNull RelativeLayout centerhorizontalline,
      @NonNull RelativeLayout centerverticalline, @NonNull TextView currentheight,
      @NonNull TextView currentweight, @NonNull DrawerLayout drawerLayout,
      @NonNull FrameLayout fragmentContainer, @NonNull RelativeLayout heightlayout,
      @NonNull SeekBar heightseekbar, @NonNull NavigationView navView, @NonNull Toolbar tbBmi,
      @NonNull RelativeLayout weightlayout, @NonNull SeekBar weightseekbar) {
    this.rootView = rootView;
    this.appbarBmi = appbarBmi;
    this.calculatebmi = calculatebmi;
    this.centerhorizontalline = centerhorizontalline;
    this.centerverticalline = centerverticalline;
    this.currentheight = currentheight;
    this.currentweight = currentweight;
    this.drawerLayout = drawerLayout;
    this.fragmentContainer = fragmentContainer;
    this.heightlayout = heightlayout;
    this.heightseekbar = heightseekbar;
    this.navView = navView;
    this.tbBmi = tbBmi;
    this.weightlayout = weightlayout;
    this.weightseekbar = weightseekbar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBmiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBmiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bmi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBmiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_bmi;
      AppBarLayout appbarBmi = rootView.findViewById(id);
      if (appbarBmi == null) {
        break missingId;
      }

      id = R.id.calculatebmi;
      Button calculatebmi = rootView.findViewById(id);
      if (calculatebmi == null) {
        break missingId;
      }

      id = R.id.centerhorizontalline;
      RelativeLayout centerhorizontalline = rootView.findViewById(id);
      if (centerhorizontalline == null) {
        break missingId;
      }

      id = R.id.centerverticalline;
      RelativeLayout centerverticalline = rootView.findViewById(id);
      if (centerverticalline == null) {
        break missingId;
      }

      id = R.id.currentheight;
      TextView currentheight = rootView.findViewById(id);
      if (currentheight == null) {
        break missingId;
      }

      id = R.id.currentweight;
      TextView currentweight = rootView.findViewById(id);
      if (currentweight == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = rootView.findViewById(id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.heightlayout;
      RelativeLayout heightlayout = rootView.findViewById(id);
      if (heightlayout == null) {
        break missingId;
      }

      id = R.id.heightseekbar;
      SeekBar heightseekbar = rootView.findViewById(id);
      if (heightseekbar == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = rootView.findViewById(id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.tb_bmi;
      Toolbar tbBmi = rootView.findViewById(id);
      if (tbBmi == null) {
        break missingId;
      }

      id = R.id.weightlayout;
      RelativeLayout weightlayout = rootView.findViewById(id);
      if (weightlayout == null) {
        break missingId;
      }

      id = R.id.weightseekbar;
      SeekBar weightseekbar = rootView.findViewById(id);
      if (weightseekbar == null) {
        break missingId;
      }

      return new ActivityBmiBinding((DrawerLayout) rootView, appbarBmi, calculatebmi,
          centerhorizontalline, centerverticalline, currentheight, currentweight, drawerLayout,
          fragmentContainer, heightlayout, heightseekbar, navView, tbBmi, weightlayout,
          weightseekbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
