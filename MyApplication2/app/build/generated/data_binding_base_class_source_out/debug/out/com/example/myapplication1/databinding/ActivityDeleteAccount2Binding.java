// Generated by view binder compiler. Do not edit!
package com.example.myapplication1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.myapplication1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeleteAccount2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final TextView lblDel;

  @NonNull
  public final TextView lblHow;

  @NonNull
  public final TextView lblPassDel;

  @NonNull
  public final TextView lblUsernameDel;

  @NonNull
  public final EditText txtPassDelete;

  @NonNull
  public final EditText txtUsernameDelete;

  private ActivityDeleteAccount2Binding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonDelete, @NonNull TextView lblDel, @NonNull TextView lblHow,
      @NonNull TextView lblPassDel, @NonNull TextView lblUsernameDel,
      @NonNull EditText txtPassDelete, @NonNull EditText txtUsernameDelete) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.lblDel = lblDel;
    this.lblHow = lblHow;
    this.lblPassDel = lblPassDel;
    this.lblUsernameDel = lblUsernameDel;
    this.txtPassDelete = txtPassDelete;
    this.txtUsernameDelete = txtUsernameDelete;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeleteAccount2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeleteAccount2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_delete_account2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeleteAccount2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      Button buttonDelete = rootView.findViewById(id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.lbl_del;
      TextView lblDel = rootView.findViewById(id);
      if (lblDel == null) {
        break missingId;
      }

      id = R.id.lbl_how;
      TextView lblHow = rootView.findViewById(id);
      if (lblHow == null) {
        break missingId;
      }

      id = R.id.lbl_pass_del;
      TextView lblPassDel = rootView.findViewById(id);
      if (lblPassDel == null) {
        break missingId;
      }

      id = R.id.lbl_username_del;
      TextView lblUsernameDel = rootView.findViewById(id);
      if (lblUsernameDel == null) {
        break missingId;
      }

      id = R.id.txt_pass_delete;
      EditText txtPassDelete = rootView.findViewById(id);
      if (txtPassDelete == null) {
        break missingId;
      }

      id = R.id.txt_username_delete;
      EditText txtUsernameDelete = rootView.findViewById(id);
      if (txtUsernameDelete == null) {
        break missingId;
      }

      return new ActivityDeleteAccount2Binding((ConstraintLayout) rootView, buttonDelete, lblDel,
          lblHow, lblPassDel, lblUsernameDel, txtPassDelete, txtUsernameDelete);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
